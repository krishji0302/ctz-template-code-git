AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: This template is to create all resources for Config Service Api

Parameters:
    EnvironmentName:
        Type: String
        Default: develop
    FunctionName:
        Description: the name of your lambda function
        Type: String
        Default: datalake-snowflake-edma-s3
    Project:
        Description: the name of your project
        Type: String
        Default: cloudeng
    Subject:
        Description: tsubject name of your SNS topic
        Type: String
        Default: tsaw-notify-pca-expire-demo
    SnSendpoint:
        Description: email adderess of sns notification
        Type: String
        Default: krishji0302@gmail.com
    S3SnowflakeBucketbhgft:
        Description: s3 bucket name where file is coming
        Type: String
        Default: glue-poc-by-krishna-new-for-demo

Globals:
    Function:
        Timeout: 30

Resources:

    MySnsTopic:
        Type: AWS::SNS::Topic
        Properties:
            DisplayName: !Sub ${Project}-${Subject}-topic
            TopicName: !Sub ${Project}-${Subject}-topic
    MySnsSubscribe:
        Type: AWS::SNS::Subscription
        Properties:
            Endpoint: !Sub ${SnSendpoint}
            Protocol: email
            TopicArn: !Ref 'MySnsTopic'

    MySsMParam:
        Type: AWS::SSM::Parameter
        Properties:
            Name: /fsb_edma_snow_bucketname
            Type: String
            Value: 'fsb-dev-servicing-datalake'

    DatalakeSnowFlakeFunction:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Ref FunctionName
            MemorySize: 1027
            Timeout: 900
            CodeUri: 's3://glue-poc-by-krishna-new/index.zip'
            Handler: index.handler
            Runtime: python3.12
            Role: arn:aws:iam::891377400717:role/lambda-role-for-cf
            Layers:
                - arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python38:19

            Policies:
                - AWSLambdaExecute
                - Version: '2012-10-17'
                  Statement:
                    - Effect: Allow
                      Action:
                        - sns:Publish
                        - sns:Subscribe
                      Resource: !Sub 'arn:aws:sns:us-east-1:${AWS:AccountId}:${Project}-${Subject}-topic'
                - Version: '2012-10-17'
                  Statement:
                    - Effect: Allow
                      Action:
                        - 'cloudwatch:*'
                        - 'logs:*'
                      Resources: !Sub 'arn:aws:logs:${AWS:Region}:${AWS:AccountId}:log-group:/aws/lambda/${FuctionName}:*'
                - Version: '2012-10-17'
                  Statement:
                   - Effect: Allow
                     Action:
                      - ssm:GetParameter
                      - ssm:DescribeParameters
                      - ssm:ListParameters
                     Resources: !Sub 'arn:aws:ssm:us-east-1:${AWS:AccountId}:parameter/${PcaExpire}'

    MyS3BucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref S3SnowflakeBucketbhgft
            PolicyDocument:
                Statement:
                 - Sid: LambdaPermission
                   Effect: Allow
                   Principal:
                     Service: lambda.amazonaws.com
                   Action: 's3:GetObject'
                   Resource: !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref S3SnowflakeBucketbhgft
                      - /daily_files_1/*

    DatalakeSnowFlakeInvokePermission:
        Type: AWS::Lambda::Permission
        DependsOn: [DatalakeSnowFlakeFunction]
        Properties:
            Event: 's3:ObjectCreated:*'
            Function: !GetAtt DatalakeSnowFlakeFunction.Arn
            Filter:
              S3Key:
                Rules:
                 - Name: prefix
                   Value: daily_files/
                 - Name: suffix
                   Value: .csv
            Action: lambda:InvokeFunction
            FunctionName: !Ref DatalakeSnowFlakeFunction
            Principal: s3.amazonaws.com
            SourceAccount: !Sub ${AWS::AccountId}
            SourceArn: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3SnowflakeBucketbhgft
                - /daily_files_1/