AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: This template is to create all resources for Config Service Api

Parameters:
    EnvironmentName:
        Type: String
        Default: develop
    FunctionName:
        Description: the name of your lambda function
        Type: String
        Default: tsaw-notify-pca-expire-demo
    Project:
        Description: the name of your project
        Type: String
        Default: cloudeng
    LobName:
        Description: line of business, example - servicing, banking, mortgage, network. Update accordengly for SAM deployment
        Type: String
        Default: 'sharedservice'
    Subject:
        Description: tsubject name of your SNS topic
        Type: String
        Default: tsaw-notify-pca-expire-demo
    PcaExpire:
        Description: PCA expire date SSM parameter
        Type: String
        Default: config/cloudeng/pca-expiredate-demo
    CronSchedule:
        Description: the name of your cloudwatch EventBridge
        Type: String
        Default: tsaw-cloudeng-notify-pca-expire-CronsSchedule-demo
    SnSendpoint:
        Description: email adderess of sns notification
        Type: String
        Default: krishji0302@gmail.com

Globals:
    Function:
        Timeout: 30
        #Environment:
        #Variables:
        #STAGE: !Ref EnvironmentName

Resources:
    MySnsTopic:
        Type: AWS::SNS::Topic
        Properties:
            DisplayName: !Sub ${Project}-${Subject}-topic
            TopicName: !Sub ${Project}-${Subject}-topic
    
    MySnsSubscribe:
        Type: AWS::SNS::Subscription
        Properties:
            Endpoint: !Sub ${SnSendpoint}
            Protocol: email
            TopicArn: !Ref MySnsTopic
    MySsMParam:
        Type: AWS::SSM::Parameter
        Properties:
            Name: /fsb/dev/datalake/daily-files-loc/daily_files
            Type: String
            Value: 'daily_files/'

Function:
    Type: AWS::Serverless::Function
    Properties:
        FunctionName: !Ref FunctionName
        MemorySize: 128
        Timeout: 120
        CodeUri: demo-code
        Handler: index.handler
        Runtime: "python3.8"
        Events:
            RateSchedule:
                Properties:
                    Description: Schedule to run daily at 7am
                    Name: !Sub ${FunctionName}-CronSchedule
                    Schedule: cron(00 11 *| * ? *)
                    Enable: true
                Type: Schdule
        Environment:
            Variables:
                SnsTopic: !Ref MySnsTopic
                STAGE: !Ref EnvironmentName
                LOB: !Ref LobName

        Policies:
            - Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - sns:Publish
                    - sns:Subscribe
                  Resource: !Sub 'arn:aws:sns:us-east-1:${AWS:AccountId}:${Project}-${Subject}-topic'
            - Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'cloudwatch:*'
                    - 'logs:*'
                  Resources: !Sub 'arn:aws:logs:${AWS:Region}:${AWS:AccountId}:log-group:/aws/lambda/${FuctionName}:*'
            - Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resources: !Sub 'arn:aws:ssm:us-east-1:${AWS:AccountId}:parameter/${PcaExpire}'